{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/device.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Navbar/navbar.js","webpack:///./src/components/Footer/footer.js","webpack:///./src/components/Layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","NotFoundPage","a","createElement","title","class","className","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","device","size","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Navigation","styled","nav","_templateObject","Navbar","siteTitle","react_default","style","float","href","FooterDiv","footer","footer_templateObject","FooterContent","div","_templateObject2","FooterListElements","url","id","Footer","_ref2","social","map","index","footer_FooterListElements","key","Footer_footer","gatsby_browser_entry","footer_Footer","_3095234797","Container","layout_templateObject","Layout","minHeight","navbar","_755544856"],"mappings":"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","file":"component---src-pages-404-js-8de4fa6d09a3f6deb714.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/Layout/layout\"\nimport SEO from \"../components/seo\"\nimport { Link } from \"gatsby\"\n\nimport '../components/css/404.css'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <div class=\"page\">\n        <h2>Sorry 404</h2>\n        <div className=\"info\">\n            <p>\n            I will take you to back to the home page,\n            you may find something interesting...\n            </p>\n            <Link to='/' class=\"gohome\" >Go to Home</Link>\n        </div>\n      </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","\nconst size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\n\n\nexport const device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { device } from '../device'\n\nconst Navigation = styled.nav`\n    display: grid;\n    width:100%;\n    grid-template-columns: auto;\n    text-align:right;\n    padding:20px 10px;\n\n    @media ${device.tablet}{\n        width:80%;\n        margin:0 auto;\n    }\n    @media ${device.laptopL}{\n    width:60%;\n    marginn:auto;\n  }\n`;\n\n\n\n\nconst Navbar = ({siteTitle}) => (\n    <Navigation>\n        <ul style={{ float:\"right\"}}>\n            <li><a href=\"#about\">About</a></li>\n            <li><a href=\"#projects\">Projects</a></li>\n            <li><a href=\"#contact\">Contact</a></li>\n        </ul>\n    </Navigation>\n)\n\nexport default Navbar\n","import React from \"react\"\nimport './footer.css'\n\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components';\nimport { device } from '../device'\n\nconst FooterDiv = styled.footer`\n    background: #AF8282;\n    padding: 20px;\n    color:white;\n`;\nconst FooterContent = styled.div`\n    width:100%;\n\n    @media ${device.tablet}{\n        width:80%;\n        margin:0 auto;\n    }\n    @media ${device.laptopL}{\n    width:60%;\n    marginn:auto;\n  }\n`;\nconst FooterListElements = ({data}) => {\n    const { name, url } = data;\n    return(\n        <li>\n            <a href={url} id={name}> <i className={`fa fa-${name} fa-2x`}></i></a>\n        </li>\n    )\n};\n\nconst Footer = ({data}) => (\n    <FooterDiv id=\"contact\">\n        <FooterContent>\n            <h2>Let's Work Togethor</h2>\n            <p>\n                If you want to chat about a project you want\n                help with or need any advice, just drop me a\n                message. I’m AVAILABLE for any projects you\n                want to work with.\n            </p>\n            <p><a className=\"link\" href=\"mailto:hello@cesarmelchor.me\">Email Me</a></p>\n\n            <div className=\"social\">\n                <ul>\n                    {data.site.siteMetadata.social.map((data,index) => <FooterListElements data={data} key ={index}/>)}\n                </ul>\n            </div>\n        </FooterContent>\n    </FooterDiv>\n)\nexport default props => (\n    <StaticQuery\n        query={graphql`\n        query footerQuery {\n            site {\n                siteMetadata {\n                    social {\n                        name\n                        url\n                    }\n                }\n            }\n        }\n        `}\n        render={data => <Footer data={data} {...props} />}\n    />\n)\n\n\n\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from 'styled-components'\nimport Navbar from '../Navbar/navbar';\nimport Footer from '../Footer/footer';\nimport \"./layout.css\"\nimport 'font-awesome/css/font-awesome.min.css';\nimport { device } from '../device'\n\nconst Container = styled.div`\n  padding: 0 20px 20px 20px;\n  width:100%;\n\n  @media ${device.tablet}{\n    width:80%;\n    margin:0 auto;\n  }\n  @media ${device.laptopL}{\n    width:60%;\n    marginn:auto;\n  }\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div style={{minHeight:'100%'}}>\n        <Navbar />\n        <Container>\n          <main>{children}</main>\n        </Container>\n        <Footer/>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n\n"],"sourceRoot":""}